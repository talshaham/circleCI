version: 2.1

orbs:
  discord: antonioned/discord@0.1.0
  bridgecrew: bridgecrew/bridgecrew@1.0.5
  terraform-orb: bankrate/terraform@1.0.0

jobs:
  docker_build:
    docker:
      - image: cimg/base:2024.05
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true      

      # - discord/status:
      #     fail_only: false
      #     failure_message: "**${CIRCLE_USERNAME}**'s build: **${CIRCLE_JOB}** failed."
      #     success_message: "**${CIRCLE_USERNAME}** deployed api to prod."
      #     webhook: "${DISCORD_STATUS_WEBHOOK}"
      - run:
          name: Reachability Test
          command: |
            docker run -d -p5000:5000 --name app $DOCKERHUB_USERNAME/weathertest:$CIRCLE_BUILD_NUM
            docker exec app python test.py
            
      - run:
          name: upload image to docker registery
          command: |
            echo "$TOKEN_GITLAB_REGISTERY" | docker login registry.gitlab.com -u talso12345 --password-stdin
            docker build -t registry.gitlab.com/git5911207/git_lab1:$CIRCLE_BUILD_NUM .
            docker push registry.gitlab.com/git5911207/git_lab1:$CIRCLE_BUILD_NUM

  checkov_tests:
    executor: bridgecrew/default
    steps:
      - checkout
      - bridgecrew/scan:
          api-key-variable: BC_API_KEY
          directory: ./terraform_files
          output: json
          soft-fail: true



  # fetch-code:
  #   executor: terraform-orb/terraform
  #   steps:
  #     - checkout
  #     - persist_to_workspace:
  #         paths:
  #           - .
  #         root: .

       
workflows:
  my-workflow:
    jobs:
      - docker_build
      - checkov_tests
      #


# workflows:
#   pipeline:
#     jobs:
#       - install_requirements
#       - docker_build
#       - checkov_tests
#       - fetch-code
#       - terraform-orb/fmt:
#           attach-workspace: true
#           checkout: false
#           infrastructure_dir: infra
#           name: tf-fmt
#           requires:
#             - fetch-code
#       - terraform-orb/validate:
#           attach-workspace: true
#           checkout: false
#           infrastructure_dir: infra
#           name: tf-validate
#           requires:
#             - fetch-code
#       - terraform-orb/init:
#           attach-workspace: true
#           checkout: false
#           filters:
#             branches:
#               ignore: master
#           infrastructure_dir: infra
#           name: tf-init-sandbox
#           requires:
#             - tf-fmt
#             - tf-validate
#           save-workspace: true
#           tfe_access_token_env_var: TFE_SANDBOX_WORKSPACE_TOKEN
#       - terraform-orb/plan:
#           environment: sandbox
#           filters:
#             branches:
#               ignore: master
#           infrastructure_dir: infra
#           name: tf-plan-sandbox
#           requires:
#             - tf-init-sandbox
      # - terraform-orb/test:
      #     environment: sandbox
      #     filters:
      #       branches:
      #         ignore: master
      #     name: tf-test-sandbox
      #     requires:
      #       - tf-plan-sandbox
      #     tests-dir: infra/test
      # - terraform-orb/apply:
      #     auto_approve: true
      #     environment: sandbox
      #     filters:
      #       branches:
      #         ignore: master
      #     infrastructure_dir: infra
      #     name: tf-apply-sandbox
      #     requires:
      #       - tf-test-sandbox
      # - terraform-orb/init:
      #     attach-workspace: true
      #     checkout: false
      #     filters:
      #       branches:
      #         only: master
      #     infrastructure_dir: infra
      #     name: tf-init-prod
      #     requires:
      #       - tf-fmt
      #       - tf-validate
      #     save-workspace: true
      #     tfe_access_token_env_var: TFE_PROD_WORKSPACE_TOKEN
      # - terraform-orb/plan:
      #     environment: prod
      #     filters:
      #       branches:
      #         only: master
      #     infrastructure_dir: infra
      #     name: tf-plan-prod
      #     requires:
      #       - tf-init-prod
      # - approve_for_prod:
      #     requires:
      #       - tf-plan-prod
      #     type: approval
      # - terraform-orb/apply:
      #     auto_approve: true
      #     environment: prod
      #     filters:
      #       branches:
      #         only: master
      #     infrastructure_dir: infra
      #     name: tf-apply-prod
      #     requires:
      #       - approve_for_prod





